Question:
Given a positive integer n, return the punishment number of n.

The punishment number of n is defined as the sum of the squares of all integers i such that:

1 <= i <= n
The decimal representation of i * i can be partitioned into contiguous substrings such that the sum of the integer values of these substrings equals i.
->1<=n<=1000

class Solution {
    public int punishmentNumber(int n) {
        int ps=0;
        for(int i=1;i<=n;i++){
            int sq=i*i;
            if(check(sq,i))
            ps+=sq;
        }
        return ps;

    }
    static boolean check(int n,int t){
        if(n<t||t<0)
        return false;
        if(n==t)
        return true;
        return (check(n/10,t-(n%10))||check(n/100,t-(n%100))||check(n/1000,t-(n%1000)));
    }
}
